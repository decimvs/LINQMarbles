<MudCard Class="marbles-card">
    <MudCardContent>
        <MudGrid>
            <MudItem xs="12">
                <MudStack Row="true" Justify="Justify.Center">
                    <CascadingValue Name="Deletable" Value="true" IsFixed="true">
                        <MudGrid Justify="Justify.Center">
                            @InputPanel
                        </MudGrid>
                    </CascadingValue>
                </MudStack>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Elevation="3">
                    @if (OperatorText is not null)
                    {
                        <MudText Typo="Typo.h3" Class="function">@OperatorText</MudText>
                    }
                    else if (OperatorPanel is not null)
                    {
                        @OperatorPanel
                    }
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudStack Row="true" Justify="Justify.Center">
                    <ErrorBoundary @ref="_errorBoundary">
                        <ChildContent>
                            <MudGrid Justify="Justify.Center">
                                @OutputPanel
                            </MudGrid>
                        </ChildContent>
                        <ErrorContent>
                            <div style="display: block">
                                <div>
                                    <Marble Color="Color.Error"><MudIcon Icon="@Icons.Material.Filled.ElectricBolt"></MudIcon></Marble>
                                </div>
                                <MudStack>
                                    <MudDivider/>
                                    <MudText Typo="Typo.h6" Inline="true">Exception:</MudText>
                                    <MudText Typo="Typo.subtitle1" Style="text-align: left">@context.Message</MudText>
                                </MudStack>
                            </div>
                        </ErrorContent>
                    </ErrorBoundary>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>
@code {
    [Parameter]
    public string? OperatorText { get; set; }
    
    [Parameter]
    public RenderFragment? OperatorPanel { get; set; }

    [Parameter, EditorRequired]
    public required RenderFragment InputPanel { get; set; }
    
    [Parameter, EditorRequired]
    public required RenderFragment OutputPanel { get; set; }
    
    private ErrorBoundary? _errorBoundary;

    protected override void OnParametersSet()
    {
        _errorBoundary?.Recover();
        base.OnParametersSet();
    }

}