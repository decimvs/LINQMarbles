@typeparam T

<Marble Color="@Color.Primary" Clicked="OpenPopup">
    <span>+</span>
    <MudPopover Open="@_showPopover" AnchorOrigin="Origin.BottomRight">
        <div class="d-flex flex-column">
            <MudInput T="T" @bind-Value="@DefaultContent" 
                      AdornmentIcon="@Icons.Material.Filled.Add"
                      Adornment="Adornment.Start"
                      AdornmentAriaLabel="Add content"
                      OnKeyUp="CallOnAddWhenEnter"
                      Required="true"
                      OnAdornmentClick="AddNewContent"
                      Variant="Variant.Outlined"
                      Style="width: 7rem"
                      @ref="_input"/>
        </div>
    </MudPopover>
</Marble>

@code {
    [Parameter]
    public EventCallback<T> OnAdd { get; set; }
    
    [Parameter]
    public T? DefaultContent { get; set; }
    
    private MudInput<T>? _input;
    private bool _showPopover;
    
    private async Task OpenPopup()
    {
        _showPopover = true;
        
        // Wait 1 ms to make sure the popover is rendered
        // and _input is not null
        await Task.Delay(1);
        if (_input is not null)
        {
            await _input.FocusAsync();
        }
    }

    private async Task AddNewContent()
    {
        await OnAdd.InvokeAsync(DefaultContent);
        _showPopover = false;
        DefaultContent = default;
    }

    private async Task CallOnAddWhenEnter(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            await AddNewContent();
        }
    }
}