@page "/"
@page "/where"

<MudCard Class="marbles-card">
    <MudCardContent>
        <MudGrid>
            <MudItem xs="12">
                <MudStack Row="true" Justify="Justify.Center">
                    @foreach (var marble in _marbles)
                    {
                        <Marble Color="marble.Color">@marble.Number</Marble>
                    }
                    <Marble Color="@Color.Primary" Clicked="@(() => _showPopover = true)">
                        +
                        <MudPopover Open="@_showPopover" AnchorOrigin="Origin.BottomRight">
                            <div class="d-flex flex-column">
                                <MudInput T="int" @bind-Value="@_number" 
                                          AdornmentIcon="@Icons.Material.Filled.Add"
                                          Adornment="Adornment.Start" 
                                          OnAdornmentClick="AddNumber"/>
                            </div>
                        </MudPopover>
                    </Marble>
                </MudStack>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Elevation="3" Class="section-card">
                    <MudText Typo="Typo.h3" Class="function">Where(n => n % 2 == 0)</MudText>
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudStack Row="true" Justify="Justify.Center">
                    @foreach (var marble in _marbles.Where(m => m.Number % 2 == 0))
                    {
                        <Marble Color="marble.Color">@marble.Number</Marble>
                    }
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>

@code {
    private readonly List<MarbleModel> _marbles = new()
    {
        new(1),
        new(2), 
        new(3), 
        new(4)
    };

    private bool _showPopover;
    private int _number = 5;

    private record MarbleModel(int Number)
    {
        public Color Color { get; } = GetRandomColor();

        private static Color GetRandomColor()
        {
            Span<Color> colors = [Color.Primary, Color.Secondary, Color.Info, Color.Success, Color.Warning, Color.Error, Color.Dark, Color.Surface];
            var randomIndex = Random.Shared.Next(colors.Length);
            return colors[randomIndex];
        }
    }

    private void AddNumber()
    {
        _marbles.Add(new MarbleModel(_number));
        _number = 0;
        _showPopover = false;
    }

}
