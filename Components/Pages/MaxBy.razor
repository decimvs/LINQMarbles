@page "/max-by"

<PageContainer OperatorText="MaxBy(o => o.Letter)">
    <InputPanel>
        @foreach (var marble in _marbles)
        {
            <Marble Color="marble.Color">@marble.Number,@marble.Content</Marble>
        }
        <Marble Color="@Color.Primary" Clicked="@(() => _showPopover = true)">
            <span>+</span>
            <MudPopover Open="@_showPopover" AnchorOrigin="Origin.BottomRight">
                <div class="d-flex flex-column">
                    <MudInput T="string" @bind-Value="@_content"
                              AdornmentIcon="@Icons.Material.Filled.Add"
                              Adornment="Adornment.Start"
                              Required="true"
                              OnAdornmentClick="AddNewContentToList"/>
                </div>
            </MudPopover>
        </Marble>
    </InputPanel>
    <OutputPanel>
        @{ var marble = _marbles.MaxBy(m => m.Content); }
        <Marble Color="marble.Color">@marble.Number,@marble.Content</Marble>
    </OutputPanel>
</PageContainer>

@code {
    private readonly List<MarbleMultiModel> _marbles = new()
    {
        new(1, "C"),
        new(2, "D"), 
        new(3, "A"), 
        new(4, "B")
    };
    
    private bool _showPopover;
    private string _content = "5,A";
    
    private void AddNewContentToList()
    {
        var split = _content.Split(',', StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries);
        if (split.Length != 2)
        {
            return;
        }
        
        var number = int.Parse(split[0]);
        var content = split[1];
        
        _marbles.Add(new MarbleMultiModel(number, content));
        _showPopover = false;
    }
}
